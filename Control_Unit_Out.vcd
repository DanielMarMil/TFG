$date
	Tue Dec 14 17:05:41 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! sw $end
$var wire 1 " lw $end
$var wire 1 # j $end
$var wire 6 $ instruction [5:0] $end
$var wire 1 % halt $end
$var wire 1 & clk $end
$var wire 1 ' beq $end
$var wire 1 ( alu $end
$var wire 1 ) addi $end
$scope module flipflop1 $end
$var wire 6 * instruction [5:0] $end
$var reg 1 ) addi $end
$var reg 1 ( alu $end
$var reg 1 ' beq $end
$var reg 1 % halt $end
$var reg 1 # j $end
$var reg 1 " lw $end
$var reg 1 ! sw $end
$upscope $end
$scope module test1 $end
$var wire 1 ) addi $end
$var wire 1 ( alu $end
$var wire 1 ' beq $end
$var wire 1 % halt $end
$var wire 1 # j $end
$var wire 1 " lw $end
$var wire 1 ! sw $end
$var reg 1 & clk $end
$var reg 6 + instruction [5:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 +
b0 *
0)
1(
0'
0&
0%
b0 $
0#
0"
0!
$end
#1
0(
1#
1&
b10 $
b10 *
b10 +
#2
1'
0#
0&
b100 $
b100 *
b100 +
#3
0'
1#
1&
b10 $
b10 *
b10 +
#4
1(
0#
0&
b0 $
b0 *
b0 +
#5
1)
0(
1&
b1000 $
b1000 *
b1000 +
#6
0)
1"
0&
b100011 $
b100011 *
b100011 +
#7
1!
0"
1&
b101011 $
b101011 *
b101011 +
#8
0!
1%
0&
b111111 $
b111111 *
b111111 +
#9
1&
