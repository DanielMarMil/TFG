$date
	Thu Dec 09 18:02:41 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 32 ! write_data [31:0] $end
$var wire 1 " write $end
$var wire 1 # reset $end
$var wire 32 $ read_data [31:0] $end
$var wire 1 % read $end
$var wire 1 & clk $end
$var wire 32 ' address [31:0] $end
$scope module flipflop1 $end
$var wire 32 ( read_data [31:0] $end
$var wire 32 ) write_data [31:0] $end
$var wire 1 " write $end
$var wire 1 # reset $end
$var wire 1 % read $end
$var wire 1 & clk $end
$var wire 32 * address [31:0] $end
$var reg 32 + data [31:0] $end
$var integer 32 , i [31:0] $end
$upscope $end
$scope module test1 $end
$var wire 32 - read_data [31:0] $end
$var reg 32 . address [31:0] $end
$var reg 1 & clk $end
$var reg 1 % read $end
$var reg 1 # reset $end
$var reg 1 " write $end
$var reg 32 / write_data [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b101 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b101 )
b0 (
b0 '
0&
0%
b0 $
0#
0"
b101 !
$end
#1
b1011 $
b1011 (
b1011 -
b1011 +
1&
1%
#2
0&
#3
b0 $
b0 (
b0 -
b0 +
1&
0%
1"
#4
b101 $
b101 (
b101 -
b101 +
0&
1%
0"
#5
1&
#6
b0 $
b0 (
b0 -
b0 +
0&
0%
1"
#7
b101 $
b101 (
b101 -
b101 +
1&
1%
0"
#8
b0 $
b0 (
b0 -
b0 +
b100000000 ,
0&
1#
#9
1&
0#
#10
0&
