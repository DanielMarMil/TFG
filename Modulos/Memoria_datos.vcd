$date
	Thu Dec 09 00:13:20 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 8 ! a [7:0] $end
$var wire 32 " write_data [31:0] $end
$var wire 1 # write $end
$var wire 1 $ reset $end
$var wire 32 % read_data [31:0] $end
$var wire 1 & read $end
$var wire 1 ' clk $end
$var wire 32 ( address [31:0] $end
$scope module flipflop1 $end
$var wire 32 ) vfb2d57 [31:0] $end
$var wire 8 * vinit [0:7] $end
$var wire 32 + w1 [0:31] $end
$var wire 32 , w2 [0:31] $end
$var wire 1 - w3 $end
$var wire 1 . w4 $end
$var wire 1 / w5 $end
$var wire 1 0 w6 $end
$var wire 32 1 w0 [0:31] $end
$var wire 1 $ ve480dc $end
$var wire 1 # ve357ae $end
$var wire 1 ' va196b8 $end
$var wire 32 2 v9c7c2c [31:0] $end
$var wire 32 3 v57717b [31:0] $end
$var wire 1 & v19af5b $end
$scope module v4ff6ac $end
$var wire 32 4 Address [31:0] $end
$var wire 1 . Read $end
$var wire 32 5 Wirte_Data [31:0] $end
$var wire 1 - Write $end
$var wire 32 6 Write_Data [31:0] $end
$var wire 1 / clk $end
$var wire 1 0 reset $end
$var wire 32 7 Read_Data [31:0] $end
$var reg 32 8 data [31:0] $end
$var integer 32 9 i [31:0] $end
$upscope $end
$upscope $end
$scope module test1 $end
$var wire 32 : read_data [31:0] $end
$var reg 32 ; address [31:0] $end
$var reg 1 ' clk $end
$var reg 1 & read $end
$var reg 1 $ reset $end
$var reg 1 # write $end
$var reg 32 < write_data [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b101 <
b0 ;
b0 :
b0 9
b0 8
b0 7
bz 6
b101 5
b0 4
b101 3
b0 2
b0 1
00
0/
0.
0-
b101 ,
b0 +
b0 *
b0 )
b0 (
0'
0&
b0 %
0$
0#
b101 "
b0 !
$end
#1
b1011 %
b1011 )
b1011 :
b1011 1
b1011 7
b1011 8
1/
1'
1.
1&
#2
0/
0'
#3
b0 %
b0 )
b0 :
b0 1
b0 7
b0 8
1/
1'
0.
0&
1-
1#
#4
0/
0'
#5
1/
1'
#6
bz %
bz )
bz :
bz 1
bz 7
bz 8
0/
0'
1.
1&
0-
0#
#7
b0 %
b0 )
b0 :
b0 1
b0 7
b0 8
b100000000 9
1/
1'
10
1$
#8
0/
0'
00
0$
#9
1/
1'
