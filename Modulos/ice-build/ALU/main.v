// Code generated by Icestudio 0.7.0

`default_nettype none

//---- Top entity
module main (
 input [31:0] vfa7d11,
 input [31:0] v1e7c65,
 input [3:0] ve768a8,
 output v3da6a5,
 output [31:0] v6144d8,
 output [0:7] vinit
);
 wire [0:31] w0;
 wire [0:31] w1;
 wire [0:3] w2;
 wire [0:31] w3;
 wire [0:31] w4;
 wire w5;
 assign w0 = vfa7d11;
 assign w1 = v1e7c65;
 assign w2 = ve768a8;
 assign v6144d8 = w3;
 assign v3da6a5 = w5;
 assign w4 = w3;
 main_v00bd94 v00bd94 (
  .A(w0),
  .B(w1),
  .Op(w2),
  .Result(w3)
 );
 main_ve56818 ve56818 (
  .Result(w4),
  .Z(w5)
 );
 assign vinit = 8'b00000000;
endmodule

/*-------------------------------------------------*/
/*-- ALU  */
/*-- - - - - - - - - - - - - - - - - - - - - - - --*/
/*-- ALU
/*-------------------------------------------------*/

module main_v00bd94 (
 input [31:0] A,
 input [31:0] B,
 input [3:0] Op,
 output [31:0] Result
);
 //-- Address bus
 wire signed [31:0] A;
 wire signed [31:0] B;
 wire [3:0]  Op;
 
 //-- Data bus
 reg [31:0]  Result = 0;
 
 always @(*)
     case (Op)
         0   :   Result = A & B;
         1   :   Result = A | B;
         2   :   Result = A + B;
         6   :   Result = A - B;
         7   :   if(A < B) begin
                     Result = 1;
                 end else begin
                     Result = 0;
                 end
         12  :   Result = ~(A | B);
         default : Result = 0;
     endcase
endmodule

module main_ve56818 (
 input [31:0] Result,
 output Z
);
 //-- Address bus
 wire [31:0] Result;
 
 //-- Data output
 reg Z;
 
 always @(*) begin
     if (Result == 0) begin
         Z <= 1;
     end else begin
         Z <= 0;
     end
 end
endmodule
